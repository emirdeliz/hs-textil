<?xml version="1.0" encoding="utf-8"?>
<ns1:FieldSet xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"  verticalScrollPolicy="off"
	creationComplete="inicio()" xmlns:ns1="com.jwopitz.containers.*" title="Estoque" dropShadowEnabled="true" dropShadowColor="#EAE5E5" shadowDistance="100" shadowDirection="right" fontThickness="100">
	<mx:HBox width="100%">
		<mx:FormItem label="Pesquisa:" width="100%">			
			<mx:TextInput width="100%" id="inputSearch" change="{filtraDados()}"/>		
		</mx:FormItem>	
		<mx:FormItem label="Tipo:">	
			<mx:ComboBox id="cbxTipo" change="buscarTodos()">
				<mx:dataProvider>
					<mx:ArrayCollection>
						<mx:Object data="material" label="Material" />		
						<mx:Object data="produto" label="Produto" />						
					</mx:ArrayCollection>
				</mx:dataProvider>
			</mx:ComboBox>
		</mx:FormItem>
	</mx:HBox>	
	<mx:DataGrid id="grid" width="100%" height="100%" doubleClick="{this.grid.selectedItem!=null? abrirFormManutencao(grid.selectedItem, true): '';}" doubleClickEnabled="true" variableRowHeight="true">
		<mx:columns>
			<mx:DataGridColumn headerText="Cod." dataField="id" wordWrap="true" width="2"/>
			<mx:DataGridColumn headerText="Nome" dataField="nome" wordWrap="true" width="6"/>		
			<mx:DataGridColumn headerText="Unidade medida" dataField="unidade.nome" wordWrap="true" width="2"/>
			<mx:DataGridColumn headerText="Quantidade" labelFunction="labelFunctionQtdEstoque" wordWrap="true" width="2"/>				
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox width="100%" verticalAlign="middle">					
		<mx:Button styleName="btEdit" click="editar()"/>				
	</mx:HBox>		
	<mx:Script>
		<![CDATA[
			import br.com.hs.sistema.view.utils.Utils;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import br.com.hs.model.remote.ServiceLocator;			
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.ResultEvent;			
			import mx.rpc.remoting.mxml.RemoteObject;			
									
			private function inicio():void{
				buscarTodos();
			}			
			
			private function buscarTodos():void{
				var remoteObject:RemoteObject = (this.cbxTipo.selectedIndex!=1?ServiceLocator.getMaterialService():ServiceLocator.getProdutoService());					
				var operation:AbstractOperation = remoteObject.getOperation("buscarTodos");				
				operation.addEventListener(ResultEvent.RESULT, onResultBuscarTodos);		
				remoteObject.buscarTodos();		
			}
			
			private function onResultBuscarTodos(event:ResultEvent):void{
				this.grid.dataProvider = event.result as ArrayCollection;				
			}
			
			private function editar():void{
				var item:Object = grid.selectedItem;
				if(item == null){
					Alert.show("Favor, selecione o item a ser editado");
				}else{
					 abrirFormManutencao(item, false);
				}
			}
			
			private function abrirFormManutencao(item:Object, leitura:Boolean):void{						
				var frm:EstoqueForm = new EstoqueForm();
				PopUpManager.addPopUp(frm, this, true);
				PopUpManager.centerPopUp(frm);				
				frm.callback = buscarTodos;		
				frm.formLeitura = leitura;	
				frm.entidade = item;				
			}
											
			private function filterSearch(item:Object):Boolean {
				var isMatch:Boolean = false;				
			
				if(item.id != null && item.id.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}			
				if(item.nome != null && item.nome.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}   
				if(item.descricao != null && item.descricao.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}   
				if(item.qtdEstoque.toString() != null && item.qtdEstoque.toString().toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}         
				return isMatch;
			}
			
			private function filtraDados():void {
				if(this.grid.dataProvider==null)
					return;
				this.grid.dataProvider.filterFunction = this.filterSearch; 
				this.grid.dataProvider.refresh();
			}	
			
			private function labelFunctionQtdEstoque(row:Object, column:DataGridColumn):String{			
				var vFormat:String = Utils.formatDec(row.qtdEstoque);						
            	return vFormat;
			}
			
		]]>
	</mx:Script>
</ns1:FieldSet>
