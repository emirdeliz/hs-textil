<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:component="br.com.hs.sistema.view.component.*" 
	width="570" title="Manutenção Acesso Sistema" styleName="formMain" showCloseButton="true" close="{this.fechar()}" xmlns:entity="br.com.hs.model.entity.*">	
	<mx:Form width="100%" height="100%">	
		<component:FormItemCustom label="Cod:" required="true">
			<component:TextInputCustom styleName="small" id="txtId" />
		</component:FormItemCustom >
		<component:FormItemCustom label="Nome:" required="true">
			<component:TextInputCustom styleName="normal" id="txtNome"/>
		</component:FormItemCustom >
		<component:FormItemCustom label="Descrição:" height="50">
			<component:TextAreaCustom id="txtDescricao"/>		
		</component:FormItemCustom>
		<component:FormItemCustom label="Permissões" width="100%">
			<mx:DataGrid width="100%" id="grid" rowCount="4">
				<mx:columns>
					<mx:DataGridColumn headerText="Menu" dataField="menu" width="6"/>		
					<mx:DataGridColumn headerText="Permitido?" dataField="permitido" width="2" textAlign="center" rendererIsEditor="true" editorDataField="selected">		
						<mx:itemRenderer>
							<mx:Component>									
								<mx:CheckBox selected="{data.permitido}" click="{data.permitido = !data.permitido}" enabled="{outerDocument.btSalvar.visible}"/>						
							</mx:Component>
						</mx:itemRenderer>
					</mx:DataGridColumn>		
				</mx:columns>				
				<mx:dataProvider>
					<mx:ArrayCollection>
						<entity:Permissao menu="{Menu.INICIO}" permitido="false"/>							
						<entity:Permissao menu="{Menu.MANUTENCAO}" permitido="false"/>
						<entity:Permissao menu="{Menu.FINANCEIRO}" permitido="false"/>
						<entity:Permissao menu="{Menu.RELATORIO}" permitido="false"/>					
					</mx:ArrayCollection>
				</mx:dataProvider>			
			</mx:DataGrid>
		</component:FormItemCustom>
		<mx:HBox>
			<mx:Button id="btSalvar" styleName="btSalvar" click="salvar()"/>					
			<mx:Button id="btFechar" styleName="btFechar" click="fechar()"/>					
		</mx:HBox>
	</mx:Form>
	<mx:Script>
		<![CDATA[
			import br.com.hs.sistema.view.utils.Utils;
			import br.com.hs.model.entity.AcessoSistema;
			import mx.utils.ObjectUtil;
			import mx.collections.ArrayCollection;
			import br.com.hs.sistema.constant.Menu;
			import br.com.hs.sistema.view.utils.Utils;
			import mx.containers.Form;			
			import mx.rpc.AbstractOperation;
			import mx.binding.utils.BindingUtils;
			import mx.managers.PopUpManager;
			import br.com.hs.model.remote.ServiceLocator;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import br.com.hs.model.entity.AcessoSistema;			
			import mx.rpc.remoting.mxml.RemoteObject;
			
			[Bindable]
			private var item:AcessoSistema;
			
			private var callbackFunction:Function;
			
			public function set entidade(item:Object):void{	
				this.item = item as AcessoSistema;	
				if(this.item!=null){
					txtId.text = this.item.id;
					txtNome.text = this.item.nome;
					txtDescricao.text = this.item.descricao;
					if(item.permissoes!=null && item.permissoes.length>0)
						this.grid.dataProvider = item.permissoes;
				}							
			}
			
			public function set callback(callbackFunction:Function):void{
				this.callbackFunction = callbackFunction;
			}
			
			public function set formLeitura(leitura:Boolean):void{
				Utils.desabilitar(this, leitura);
				this.btFechar.visible=true;
        		this.btFechar.includeInLayout=true;
			}
					
			private function salvar():void{
				
				if(!Utils.validaCampos([txtId, txtNome])){
					Alert.show("Favor, preencha os campos obrigatórios");
					return;
				}	
				
				if(this.item == null){
					this.item = new AcessoSistema();									
				}
				
				this.item.id = txtId.text;
				this.item.nome = txtNome.text;
				this.item.descricao = txtDescricao.text;
				this.item.permissoes = (this.grid.dataProvider as ArrayCollection);				
							
				var remoteObject:RemoteObject = ServiceLocator.getAcessoSistemaService();			
				var operation:AbstractOperation = remoteObject.getOperation("salvar");				
				operation.addEventListener(ResultEvent.RESULT, onResultSalvar);		
				remoteObject.salvar(this.item);
			}
			
			private function onResultSalvar(event:ResultEvent):void{
				Alert.show("Salvo com sucesso");
				callbackFunction();
				fechar();
			}
						
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
</mx:TitleWindow>
