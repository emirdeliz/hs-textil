<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="482"
	title="Manutenção Atendimento" xmlns:ns2="br.com.thinklab.util.control.*" 
	xmlns:component="br.com.hs.sistema.view.component.*" showCloseButton="true" close="{this.fechar()}" height="187">
	<mx:Form width="100%" height="100%">	
		<component:FormItemCustom label="Descrição:" height="50">
			<component:TextAreaCustom id="txtDescricao"/>		
		</component:FormItemCustom>
		<component:FormItemCustom  label="Data:">
			<mx:DateField id="txtData" formatString="DD/MM/YYYY"/>
		</component:FormItemCustom >
		<mx:HBox>
			<mx:Button id="btSalvar" styleName="btSalvar" click="salvar()"/>					
			<mx:Button id="btFechar" styleName="btFechar" click="fechar()"/>					
		</mx:HBox>
	</mx:Form>	
	<mx:Script>
		<![CDATA[
			import br.com.hs.sistema.view.utils.Utils;		
			import mx.containers.Form;			
			import mx.rpc.AbstractOperation;
			import mx.binding.utils.BindingUtils;
			import mx.managers.PopUpManager;			
			import br.com.hs.model.remote.ServiceLocator;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import br.com.hs.model.entity.Atendimento;			
			import mx.rpc.remoting.mxml.RemoteObject;
			
			[Bindable]
			private var item:Atendimento;
			
			private var callbackFunction:Function;
			
			public function set entidade(item:Object):void{	
				this.item = item as Atendimento;	
				if(this.item!=null){
					txtData.selectedDate = this.item.data;					
					txtDescricao.text = this.item.descricao;
				}							
			}
			
			public function set callback(callbackFunction:Function):void{
				this.callbackFunction = callbackFunction;
			}
			
			public function set formLeitura(leitura:Boolean):void{
				Utils.desabilitar(this, leitura);
				this.btFechar.visible=true;
        		this.btFechar.includeInLayout=true;
			}
					
			private function salvar():void{
				
				if(!Utils.validaCampos([txtData, txtDescricao])){
					Alert.show("Favor, preencha os campos obrigatórios");
					return;
				}	
				
				if(this.item == null){
					this.item = new Atendimento();									
				}
				
				this.item.data = txtData.selectedDate;			
				this.item.descricao = txtDescricao.text;
										
				var remoteObject:RemoteObject = ServiceLocator.getAtendimentoService();					
				var operation:AbstractOperation = remoteObject.getOperation("salvar");				
				operation.addEventListener(ResultEvent.RESULT, onResultSalvar);		
				remoteObject.salvar(this.item);
			}
			
			private function onResultSalvar(event:ResultEvent):void{
				Alert.show("Salvo com sucesso");
				callbackFunction();
				fechar();
			}
						
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
</mx:TitleWindow>
