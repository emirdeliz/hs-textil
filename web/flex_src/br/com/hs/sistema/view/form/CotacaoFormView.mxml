<?xml version="1.0" encoding="utf-8"?>
<ns1:FieldSet xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="inicio()" 
	 verticalScrollPolicy="off" xmlns:ns1="com.jwopitz.containers.*" title="Cotações" dropShadowEnabled="true" dropShadowColor="#EAE5E5" shadowDistance="100" shadowDirection="right" fontThickness="100">	
	<mx:FormItem label="Pesquisar:" width="100%" direction="horizontal">
		<mx:TextInput width="100%" id="inputSearch" change="{filtraDados()}"/>				
	</mx:FormItem>			
	<mx:DataGrid id="grid" width="100%" height="100%" doubleClick="{this.grid.selectedItem!=null? abrirFormManutencao(grid.selectedItem, true): '';}" doubleClickEnabled="true" variableRowHeight="true">
		<mx:columns>
			<mx:DataGridColumn headerText="Cod." dataField="id" wordWrap="true" width="2"/>		
			<mx:DataGridColumn headerText="Nome" dataField="nome" wordWrap="true" width="6"/>						
		</mx:columns>
	</mx:DataGrid>
	<mx:HBox width="100%" verticalAlign="middle">
		<mx:Button styleName="btVisualizar" click="abrirFormManutencao(grid.selectedItem, false)"/>					
	</mx:HBox>		
	<mx:Script>
		<![CDATA[
			import br.com.hs.model.entity.Cotacao;
			import br.com.hs.portal.componente.CotacaoPortalForm;			
			import mx.binding.utils.BindingUtils;			
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import br.com.hs.model.remote.ServiceLocator;			
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.ResultEvent;			
			import mx.rpc.remoting.mxml.RemoteObject;
			
			[Bindable]
			private var cotacao:Cotacao;			
									
			private function inicio():void{
				buscarTodos();				
			}			
			
			private function buscarTodos():void{
				var remoteObject:RemoteObject = ServiceLocator.getMaterialService();					
				var operation:AbstractOperation = remoteObject.getOperation("buscarTodos");				
				operation.addEventListener(ResultEvent.RESULT, onResultBuscarTodos);		
				remoteObject.buscarTodos();				
			}
			
			private function onResultBuscarTodos(event:ResultEvent):void{
				this.grid.dataProvider = event.result as ArrayCollection;				
			}
									
			private function abrirFormManutencao(item:Object, leitura:Boolean):void{				
				if(item == null){
					Alert.show("Favor, selecione o item a ser visualizado");
				}else{						
					var frm:CotacaoForm = new CotacaoForm();
					PopUpManager.addPopUp(frm, this, true);
					PopUpManager.centerPopUp(frm);
					frm.entidade = item;	
					frm.callback = buscarTodos;		
					frm.formLeitura = leitura;	
				}				
			}	
						
			private function filterSearch(item:Object):Boolean {
				var isMatch:Boolean = false;				
			
				if(item.id != null && item.id.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}			
				if(item.nome  != null && item.nome.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}   
				         
				return isMatch;
			}
						
			private function filtraDados():void {
				if(this.grid.dataProvider==null)
					return;
				this.grid.dataProvider.filterFunction = this.filterSearch; 
				this.grid.dataProvider.refresh();
			}	
						
		]]>
	</mx:Script>
</ns1:FieldSet>
