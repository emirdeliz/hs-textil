<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:component="br.com.hs.sistema.view.component.*" 
	width="482" title="Manutenção Promoção" styleName="formMain" showCloseButton="true" close="{this.fechar()}">	
	<mx:Form width="100%" height="100%">	
		<component:FormItemCustom label="Data:" required="true">
			<component:TextInputCustom styleName="small" id="txtData" />
		</component:FormItemCustom >
		<component:FormItemCustom label="Funcionário:" direction="horizontal">	
			<component:TextInputCustom styleName="small" id="txtIdFuncionario" editable="false"/>
			<component:TextInputCustom styleName="normal" id="txtFuncionario" editable="false"/>
			<component:TextInputCustom styleName="normal" id="txtOidFuncionario" visible="false" includeInLayout="false"/>
		</component:FormItemCustom>
		<mx:FormItem label="Tipo de envio">
			<mx:ComboBox id="cbxTipo">
				<mx:ArrayCollection>
					<mx:Object data="{TipoPromocao.AMBOS}" label="E-mail e Twitter"/>
					<mx:Object data="{TipoPromocao.TWITTER}" label="Twitter"/>
					<mx:Object data="{TipoPromocao.EMAIL}" label="E-mail"/>
				</mx:ArrayCollection>
			</mx:ComboBox>
		</mx:FormItem>
		<component:FormItemCustom label="Descrição:" height="69">
			<component:TextAreaCustom id="txtDescricao" change="{this.lblCaracteres.text = 'Caracteres: ' + this.txtDescricao.text.length.toString()}"/>				
			<mx:Label id="lblCaracteres" text="Caracteres: 0" fontSize="8" color="#C5B1B1"/>			
		</component:FormItemCustom>
		<mx:HBox>
			<mx:Button id="btSalvar" styleName="btSalvar" click="salvar()"/>					
			<mx:Button id="btFechar" styleName="btFechar" click="fechar()"/>					
		</mx:HBox>
	</mx:Form>
	<mx:Script>
		<![CDATA[
			import br.com.hs.model.entity.Funcionario;
			import br.com.hs.model.entity.Promocao;
			import br.com.hs.sistema.constant.TipoPromocao;
			import br.com.hs.sistema.view.utils.Utils;
			import mx.containers.Form;			
			import mx.rpc.AbstractOperation;
			import mx.binding.utils.BindingUtils;
			import mx.managers.PopUpManager;
			import br.com.hs.model.entity.Cargo;
			import br.com.hs.model.remote.ServiceLocator;
			import mx.rpc.events.ResultEvent;
			import mx.controls.Alert;
			import br.com.hs.model.entity.Atendimento;			
			import mx.rpc.remoting.mxml.RemoteObject;
			
			[Bindable]
			private var item:Promocao;
			
			private var callbackFunction:Function;
			
			public function set entidade(item:Object):void{	
				this.item = item as Promocao;	
				if(this.item!=null){
					this.txtData.text = Utils.formatDat(this.item.data);
					this.cbxTipo.selectedIndex = this.item.tipo;
					this.txtDescricao.text = this.item.descricao;
					this.txtOidFuncionario.text = this.parentDocument.usuarioCorrente.oid.toString();
					this.txtFuncionario.text = this.item.funcionario.nome;
					this.txtIdFuncionario.text = this.item.funcionario.id;
				}else{
					this.txtData.text = Utils.formatDat(new Date());
					this.txtOidFuncionario.text = this.parentDocument.usuarioCorrente.oid.toString();
					this.txtFuncionario.text = this.parentDocument.usuarioCorrente.nome;
					this.txtIdFuncionario.text = this.parentDocument.usuarioCorrente.id;
					this.lblCaracteres.text = 'Caracteres: ' + this.txtDescricao.text.length.toString();
				}							
			}
			
			public function set callback(callbackFunction:Function):void{
				this.callbackFunction = callbackFunction;
			}
			
			public function set formLeitura(leitura:Boolean):void{
				Utils.desabilitar(this, leitura);
				this.btFechar.visible=true;
        		this.btFechar.includeInLayout=true;
			}
					
			private function salvar():void{
				
				if(!Utils.validaCampos([txtDescricao])){
					Alert.show("Favor, preencha os campos obrigatórios");
					return;
				}	
				
				if(txtDescricao.text.length > 140 && cbxTipo.selectedItem.data != TipoPromocao.EMAIL){
					Alert.show("Para postagens no Twitter o limite de caracteres não pode exceder 140!");
					return;
				}
								
				this.item = new Promocao();					
				this.item.data = new Date();
				this.item.tipo = this.cbxTipo.selectedIndex;
				this.item.descricao = this.txtDescricao.text;
				this.item.funcionario = new Funcionario();
				this.item.funcionario.oid = new Number(this.txtOidFuncionario.text);
										
				var remoteObject:RemoteObject = ServiceLocator.getPromocaoService();					
				var operation:AbstractOperation = remoteObject.getOperation("salvar");				
				operation.addEventListener(ResultEvent.RESULT, onResultSalvar);		
				remoteObject.salvar(this.item);
			}
			
			private function onResultSalvar(event:ResultEvent):void{
				Alert.show("Salvo com sucesso");
				callbackFunction();
				fechar();
			}
						
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
</mx:TitleWindow>
