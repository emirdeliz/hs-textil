<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" width="394" height="302" layout="absolute" 
	creationComplete="inicio()" title="FuncionÃ¡rio">
	<mx:Form width="100%" height="100%">	
		<mx:FormItem label="Pesquisar:" width="100%">
			<mx:TextInput width="100%" id="inputSearch" change="{filtroDados()}"/>			
		</mx:FormItem>
		<mx:DataGrid id="grid" width="100%" height="100%" doubleClick="{seleciona(grid.selectedItem);fechar();}" doubleClickEnabled="true">
			<mx:columns>
				<mx:DataGridColumn headerText="Cod." dataField="id" width="2"/>
				<mx:DataGridColumn headerText="Nome" dataField="nome" width="4"/>				
			</mx:columns>
		</mx:DataGrid>
		<mx:HBox width="100%" verticalAlign="middle">
			<mx:Button click="clickSel()" styleName="btSelecionar"/>			
			<mx:Button click="fechar()" styleName="btFechar"/>
		</mx:HBox>
	</mx:Form>	
	<mx:Script>
		<![CDATA[
			import br.com.hs.model.remote.ServiceLocator;
			import mx.controls.Alert;
			import mx.collections.ArrayCollection;
			import mx.rpc.AbstractOperation;
			import mx.rpc.events.ResultEvent;			
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var seleciona:Function;			
			
			public function set callback(f:Function):void{
				this.seleciona = f;
			}
									
			private function inicio():void{
				var remoteObject:RemoteObject = ServiceLocator.getFuncionarioService();				
				var operation:AbstractOperation = remoteObject.getOperation("buscarTodosAtivos");				
				operation.addEventListener(ResultEvent.RESULT, onResultBuscarTodos);		
				remoteObject.buscarTodosAtivos();				
			}
			
			private function onResultBuscarTodos(event:ResultEvent):void{
				this.grid.dataProvider = event.result as ArrayCollection;				
			}				
						
			private function fechar():void{
				PopUpManager.removePopUp(this);
			}	
			
			private function clickSel():void{
				if(grid.selectedItem == null){
					Alert.show("Selecione um item");
				}else{
					seleciona(grid.selectedItem);
					fechar();					
				}
			}
						
			private function filterSearch(item:Object):Boolean {
				var isMatch:Boolean = false;				
			
				if(item.id.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}			
				if(item.nome.toLowerCase().search(this.inputSearch.text.toLowerCase()) != -1){
					isMatch = true
				}              
				return isMatch;
			}
			
			private function filtroDados():void {
				if(this.grid.dataProvider==null)
					return;
				this.grid.dataProvider.filterFunction = this.filterSearch; 
				this.grid.dataProvider.refresh();
			}	
		]]>
	</mx:Script>
</mx:Panel>
